{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Austin\\\\ReactCourse\\\\EstatePal-App-master(July 30th)\\\\EstatePal-App-master\\\\src\\\\components\\\\clientTiles&Sides\\\\TileAreaContent.js\";\nimport \"./TileAreaContent.css\";\nimport TileCard from \"./TileCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TileAreaContent(props) {\n  // number to display in account window\n  let numDisplay = (props.totalTax - 11700000) * 0.4;\n\n  if (numDisplay > 0) {\n    numDisplay = numDisplay.toFixed(0);\n    numDisplay = `$${numDisplay.toLocaleString()}`;\n  } else {\n    numDisplay = null;\n  } // declares variable to be used in if statement\n\n\n  let suggestionsComp = null; // Suggestions section: appears if calculation is done.\n\n  if (props.counter > 0) {\n    suggestionsComp = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aroundClientTiles\",\n        children: props.item.map(mapArray => /*#__PURE__*/_jsxDEV(TileCard, {\n          task: mapArray.task,\n          description: mapArray.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightBoxesParent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newsletter\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Get Our Newsletter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"And get some great updates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"inputNewsletter\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"buttonNewsletter\",\n              children: \"SUBMIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-window\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Help \", props.clientRecent, \" save \", numDisplay, \" on Estate Tax today\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-window-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-account-button\",\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"login-button\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    suggestionsComp = null;\n  }\n\n  return suggestionsComp;\n}\n\n_c = TileAreaContent;\nexport default TileAreaContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TileAreaContent\");","map":{"version":3,"sources":["C:/Users/Austin/ReactCourse/EstatePal-App-master(July 30th)/EstatePal-App-master/src/components/clientTiles&Sides/TileAreaContent.js"],"names":["TileCard","TileAreaContent","props","numDisplay","totalTax","toFixed","toLocaleString","suggestionsComp","counter","item","map","mapArray","task","description","clientRecent"],"mappings":";AAAA,OAAO,uBAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B;AACA,MAAIC,UAAU,GAAG,CAACD,KAAK,CAACE,QAAN,GAAiB,QAAlB,IAA8B,GAA/C;;AACA,MAAID,UAAU,GAAG,CAAjB,EAAoB;AAClBA,IAAAA,UAAU,GAAGA,UAAU,CAACE,OAAX,CAAmB,CAAnB,CAAb;AACAF,IAAAA,UAAU,GAAI,IAAGA,UAAU,CAACG,cAAX,EAA4B,EAA7C;AACD,GAHD,MAGO;AACLH,IAAAA,UAAU,GAAG,IAAb;AACD,GAR6B,CAU9B;;;AACA,MAAII,eAAe,GAAG,IAAtB,CAX8B,CAa9B;;AACA,MAAIL,KAAK,CAACM,OAAN,GAAgB,CAApB,EAAuB;AACrBD,IAAAA,eAAe,gBACb;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACGL,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAgBC,QAAD,iBACd,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,QAAQ,CAACC,IAAzB;AAA+B,UAAA,WAAW,EAAED,QAAQ,CAACE;AAArD;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,SAAS,EAAC,iBAA9B;AAAgD,cAAA,QAAQ;AAAxD;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAA,gCACQX,KAAK,CAACY,YADd,YACkCX,UADlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD,GAtCD,MAsCO;AACLI,IAAAA,eAAe,GAAG,IAAlB;AACD;;AAED,SAAOA,eAAP;AACD;;KAzDQN,e;AA2DT,eAAeA,eAAf","sourcesContent":["import \"./TileAreaContent.css\";\nimport TileCard from \"./TileCard\";\n\nfunction TileAreaContent(props) {\n  // number to display in account window\n  let numDisplay = (props.totalTax - 11700000) * 0.4;\n  if (numDisplay > 0) {\n    numDisplay = numDisplay.toFixed(0);\n    numDisplay = `$${numDisplay.toLocaleString()}`;\n  } else {\n    numDisplay = null;\n  }\n\n  // declares variable to be used in if statement\n  let suggestionsComp = null;\n\n  // Suggestions section: appears if calculation is done.\n  if (props.counter > 0) {\n    suggestionsComp = (\n      <div className=\"tile\">\n        {/*-\n         below are the client tiles: \n         -*/}\n        <div className=\"aroundClientTiles\">\n          {props.item.map((mapArray) => (\n            <TileCard task={mapArray.task} description={mapArray.description} />\n          ))}\n        </div>\n\n        {/* div for right side suggestions and newsletter */}\n        <div className=\"rightBoxesParent\">\n          <div className=\"newsletter\">\n            <form>\n              <h2>Get Our Newsletter</h2>\n              <p>And get some great updates</p>\n              <label>Email </label>\n              <input type=\"email\" className=\"inputNewsletter\" required></input>\n              <button type=\"submit\" className=\"buttonNewsletter\">\n                SUBMIT\n              </button>\n            </form>\n          </div>\n\n          <div className=\"account-window\">\n            <h2>\n              Help {props.clientRecent} save {numDisplay} on Estate Tax today\n            </h2>\n            <div className=\"account-window-buttons\">\n              <button className=\"create-account-button\">Create Account</button>\n              <button className=\"login-button\">Login</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    suggestionsComp = null;\n  }\n\n  return suggestionsComp;\n}\n\nexport default TileAreaContent;\n"]},"metadata":{},"sourceType":"module"}