{"ast":null,"code":"import _slicedToArray from\"C:/Users/Austin/ReactCourse/EstatePal-App-master(July 30th)/EstatePal-App-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./Button.css\";//states to change values\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Button(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];//values typed into card\nfunction taskHandler(event){setTask(event.target.value);}function descriptionHandler(event){setDescription(event.target.value);}// Declares variable so it is global (to create and clear cards (array) added)\nvar buttonArray;//submission function\nfunction addCardHandler(event){// stops page from resfreshing thing\nevent.preventDefault();// // Tax calculation if above $11.7 million--every dollar above 11.7 million is taxed.\n// // If below $11.7 million, it displays \"No estate tax (below 11.7 million)\".\n// let newEstate = description;\n// if (newEstate > 11.7) {\n//   newEstate = (newEstate - 11.7) * 0.4;\n//   newEstate = newEstate.toFixed(2);\n//   // newEstate = `$${newEstate}`;\n// } else {\n//   newEstate = 0;\n//   // newEstate = `$${newEstate}`;\n// }\n//new dynamic array is constructed\nbuttonArray=[{task:task,description:description}];props.getDiv(buttonArray[0]);setTask(\"\");setDescription(\"\");}//Function for clearing data (second submit form)\nfunction clearHandler(){buttonArray=undefined;}return/*#__PURE__*/_jsxs(\"div\",{className:\"inputArea\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Austin Hansen\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"React Developer\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Here's a snapshot of what I like working on.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"It's a tool I made for financial advisors who manage millions of dollars for wealthy clientele. This tool helps identify how much will be owed in estate tax after the client's passing.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Try it out!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Tip: Estate values usually exceed $11,000,000\"})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"right\",onSubmit:addCardHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"parentField\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Client's Name\"}),/*#__PURE__*/_jsx(\"input\",{className:\"taskField\",type:\"text\",value:task,onChange:taskHandler,autoFocus:true,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"parentField\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Estate Value ($)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"descriptionField\",value:description,onChange:descriptionHandler,required:true,min:\"0\",step:\"1\",placeholder:\"e.g. 14000000\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"buttonParent\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",children:\"CALCULATE\"})}),/*#__PURE__*/_jsx(\"form\",{className:\"buttonParent\",onSubmit:clearHandler,children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",children:\"CLEAR\"})})]})]});}export default Button;","map":{"version":3,"sources":["C:/Users/Austin/ReactCourse/EstatePal-App-master(July 30th)/EstatePal-App-master/src/components/topTitle&Form/Button.js"],"names":["React","useState","Button","props","task","setTask","description","setDescription","taskHandler","event","target","value","descriptionHandler","buttonArray","addCardHandler","preventDefault","getDiv","clearHandler","undefined"],"mappings":"uMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAO,cAAP,CAEA;wFACA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACrB,cAAwBF,QAAQ,CAAC,EAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAAsCJ,QAAQ,CAAC,EAAD,CAA9C,yCAAOK,WAAP,eAAoBC,cAApB,eAEA;AACA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CAC1BJ,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CACD,CAED,QAASC,CAAAA,kBAAT,CAA4BH,KAA5B,CAAmC,CACjCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACD,CAED;AACA,GAAIE,CAAAA,WAAJ,CAEA;AACA,QAASC,CAAAA,cAAT,CAAwBL,KAAxB,CAA+B,CAC7B;AACAA,KAAK,CAACM,cAAN,GAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAF,WAAW,CAAG,CAAC,CAAET,IAAI,CAAEA,IAAR,CAAcE,WAAW,CAAEA,WAA3B,CAAD,CAAd,CAEAH,KAAK,CAACa,MAAN,CAAaH,WAAW,CAAC,CAAD,CAAxB,EACAR,OAAO,CAAC,EAAD,CAAP,CACAE,cAAc,CAAC,EAAD,CAAd,CACD,CAED;AACA,QAASU,CAAAA,YAAT,EAAwB,CACtBJ,WAAW,CAAGK,SAAd,CACD,CAED,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,aAAK,SAAS,CAAC,MAAf,wBACA,qCADA,cAEE,uCAFF,cAGE,mEAHF,cAIE,+MAJF,cASE,kCATF,cAUE,oEAVF,GADF,cAaE,cAAM,SAAS,CAAC,OAAhB,CAAwB,QAAQ,CAAEJ,cAAlC,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,wCADF,cAEE,cACE,SAAS,CAAC,WADZ,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAEV,IAHT,CAIE,QAAQ,CAAEI,WAJZ,CAKE,SAAS,KALX,CAME,QAAQ,KANV,EAFF,GADF,cAYE,aAAK,SAAS,CAAC,aAAf,wBACE,2CADF,cAEE,cACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,kBAFZ,CAGE,KAAK,CAAEF,WAHT,CAIE,QAAQ,CAAEM,kBAJZ,CAKE,QAAQ,KALV,CAME,GAAG,CAAC,GANN,CAOE,IAAI,CAAC,GAPP,CAQE,WAAW,CAAC,eARd,EAFF,GAZF,cA0BE,YAAK,SAAS,CAAC,cAAf,uBACE,eAAQ,SAAS,CAAC,QAAlB,CAA2B,IAAI,CAAC,QAAhC,uBADF,EA1BF,cAgCE,aAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEK,YAAzC,uBACE,eAAQ,SAAS,CAAC,QAAlB,CAA2B,IAAI,CAAC,QAAhC,mBADF,EAhCF,GAbF,GADF,CAsDD,CAED,cAAef,CAAAA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Button.css\";\n\n//states to change values\nfunction Button(props) {\n  const [task, setTask] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  //values typed into card\n  function taskHandler(event) {\n    setTask(event.target.value);\n  }\n\n  function descriptionHandler(event) {\n    setDescription(event.target.value);\n  }\n\n  // Declares variable so it is global (to create and clear cards (array) added)\n  let buttonArray;\n\n  //submission function\n  function addCardHandler(event) {\n    // stops page from resfreshing thing\n    event.preventDefault();\n\n    // // Tax calculation if above $11.7 million--every dollar above 11.7 million is taxed.\n    // // If below $11.7 million, it displays \"No estate tax (below 11.7 million)\".\n\n    // let newEstate = description;\n\n    // if (newEstate > 11.7) {\n    //   newEstate = (newEstate - 11.7) * 0.4;\n    //   newEstate = newEstate.toFixed(2);\n    //   // newEstate = `$${newEstate}`;\n    // } else {\n    //   newEstate = 0;\n    //   // newEstate = `$${newEstate}`;\n    // }\n\n    //new dynamic array is constructed\n    buttonArray = [{ task: task, description: description }];\n\n    props.getDiv(buttonArray[0]);\n    setTask(\"\");\n    setDescription(\"\");\n  }\n\n  //Function for clearing data (second submit form)\n  function clearHandler() {\n    buttonArray = undefined;\n  }\n\n  return (\n    <div className=\"inputArea\">\n      <div className=\"left\">\n      <h1>Austin Hansen</h1>\n        <h2>React Developer</h2>\n        <p>Here's a snapshot of what I like working on.</p>\n        <p>\n          It's a tool I made for financial advisors who manage millions of\n          dollars for wealthy clientele. This tool helps identify how much will\n          be owed in estate tax after the client's passing.\n        </p>\n        <p>Try it out!</p>\n        <p>Tip: Estate values usually exceed $11,000,000</p>\n      </div>\n      <form className=\"right\" onSubmit={addCardHandler}>\n        <div className=\"parentField\">\n          <label>Client's Name</label>\n          <input\n            className=\"taskField\"\n            type=\"text\"\n            value={task}\n            onChange={taskHandler}\n            autoFocus\n            required\n          />\n        </div>\n        <div className=\"parentField\">\n          <label>Estate Value ($)</label>\n          <input\n            type=\"number\"\n            className=\"descriptionField\"\n            value={description}\n            onChange={descriptionHandler}\n            required\n            min=\"0\"\n            step=\"1\"\n            placeholder=\"e.g. 14000000\"\n          />\n        </div>\n        {/* buttonss --------- */}\n        <div className=\"buttonParent\">\n          <button className=\"button\" type=\"submit\">\n            CALCULATE\n          </button>\n        </div>\n\n        <form className=\"buttonParent\" onSubmit={clearHandler}>\n          <button className=\"button\" type=\"submit\">\n            CLEAR\n          </button>\n        </form>\n      </form>\n    </div>\n  );\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}