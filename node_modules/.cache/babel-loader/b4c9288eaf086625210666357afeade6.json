{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Austin\\\\ReactCourse\\\\EstatePal-App\\\\src\\\\components\\\\topTitle&Form\\\\Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Button.css\"; //states to change values\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Button(props) {\n  _s();\n\n  const [task, setTask] = useState(\"\");\n  const [description, setDescription] = useState(\"\"); //values typed into card\n\n  function taskHandler(event) {\n    setTask(event.target.value);\n  }\n\n  function descriptionHandler(event) {\n    setDescription(event.target.value);\n  } // Declares variable so it is global (to create and clear cards (array) added)\n\n\n  let buttonArray; //submission function\n\n  function addCardHandler(event) {\n    // stops page from resfreshing thing\n    event.preventDefault(); // // Tax calculation if above $11.7 million--every dollar above 11.7 million is taxed.\n    // // If below $11.7 million, it displays \"No estate tax (below 11.7 million)\".\n    // let newEstate = description;\n    // if (newEstate > 11.7) {\n    //   newEstate = (newEstate - 11.7) * 0.4;\n    //   newEstate = newEstate.toFixed(2);\n    //   // newEstate = `$${newEstate}`;\n    // } else {\n    //   newEstate = 0;\n    //   // newEstate = `$${newEstate}`;\n    // }\n    //new dynamic array is constructed\n\n    buttonArray = [{\n      task: task,\n      description: description\n    }];\n    props.getDiv(buttonArray[0]);\n    setTask(\"\");\n    setDescription(\"\");\n  } //Function for clearing data (second submit form)\n\n\n  function clearHandler() {\n    buttonArray = undefined;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputArea\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"EstatePal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Estate tax, simplified.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"right\",\n      onSubmit: addCardHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parentField\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Client's Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"taskField\",\n          type: \"text\",\n          value: task,\n          onChange: taskHandler,\n          autoFocus: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parentField\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Estate Value ($ in millions)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"descriptionField\",\n          value: description,\n          onChange: descriptionHandler,\n          required: true,\n          min: \"0\",\n          step: \".1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonParent\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"CALCULATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"buttonParent\",\n        onSubmit: clearHandler,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"CLEAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Button, \"A5duMTpNsgYidslHFUVvAWKhgPM=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/Austin/ReactCourse/EstatePal-App/src/components/topTitle&Form/Button.js"],"names":["React","useState","Button","props","task","setTask","description","setDescription","taskHandler","event","target","value","descriptionHandler","buttonArray","addCardHandler","preventDefault","getDiv","clearHandler","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\n//states to change values\r\nfunction Button(props) {\r\n  const [task, setTask] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  //values typed into card\r\n  function taskHandler(event) {\r\n    setTask(event.target.value);\r\n  }\r\n\r\n  function descriptionHandler(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  // Declares variable so it is global (to create and clear cards (array) added)\r\n  let buttonArray;\r\n\r\n  //submission function\r\n  function addCardHandler(event) {\r\n    // stops page from resfreshing thing\r\n    event.preventDefault();\r\n\r\n    // // Tax calculation if above $11.7 million--every dollar above 11.7 million is taxed.\r\n    // // If below $11.7 million, it displays \"No estate tax (below 11.7 million)\".\r\n\r\n    // let newEstate = description;\r\n\r\n    // if (newEstate > 11.7) {\r\n    //   newEstate = (newEstate - 11.7) * 0.4;\r\n    //   newEstate = newEstate.toFixed(2);\r\n    //   // newEstate = `$${newEstate}`;\r\n    // } else {\r\n    //   newEstate = 0;\r\n    //   // newEstate = `$${newEstate}`;\r\n    // }\r\n\r\n    //new dynamic array is constructed\r\n    buttonArray = [{ task: task, description: description }];\r\n\r\n    props.getDiv(buttonArray[0]);\r\n    setTask(\"\");\r\n    setDescription(\"\");\r\n  }\r\n\r\n  //Function for clearing data (second submit form)\r\n  function clearHandler() {\r\n    buttonArray = undefined;\r\n  }\r\n\r\n  return (\r\n    <div className=\"inputArea\">\r\n      <div className=\"left\">\r\n        <h1>EstatePal</h1>\r\n        <p>Estate tax, simplified.</p>\r\n      </div>\r\n      <form className=\"right\" onSubmit={addCardHandler}>\r\n        <div className=\"parentField\">\r\n          <label>Client's Name</label>\r\n          <input\r\n            className=\"taskField\"\r\n            type=\"text\"\r\n            value={task}\r\n            onChange={taskHandler}\r\n            autoFocus\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"parentField\">\r\n          <label>Estate Value ($ in millions)</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"descriptionField\"\r\n            value={description}\r\n            onChange={descriptionHandler}\r\n            required\r\n            min=\"0\"\r\n            step=\".1\"\r\n          />\r\n        </div>\r\n        {/* buttonss --------- */}\r\n        <div className=\"buttonParent\">\r\n          <button className=\"button\" type=\"submit\">\r\n            CALCULATE\r\n          </button>\r\n        </div>\r\n\r\n        <form className=\"buttonParent\" onSubmit={clearHandler}>\r\n          <button className=\"button\" type=\"submit\">\r\n            CLEAR\r\n          </button>\r\n        </form>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}