{"ast":null,"code":"import\"./TileAreaContent.css\";import TileCard from\"./TileCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TileAreaContent(props){// number to display in account window\nvar numDisplay=(props.totalTax-11700000)*0.4;if(numDisplay>0){numDisplay=Number(numDisplay.toFixed());numDisplay=\"$\".concat(numDisplay.toLocaleString());}else{numDisplay=null;}// declares variable to be used in if statement\nvar suggestionsComp=null;// Suggestions section: appears if calculation is done.\nif(props.counter>0){suggestionsComp=/*#__PURE__*/_jsxs(\"div\",{className:\"tile\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"aroundClientTiles\",children:props.item.map(function(mapArray){return/*#__PURE__*/_jsx(TileCard,{task:mapArray.task,description:mapArray.description});})}),/*#__PURE__*/_jsxs(\"div\",{className:\"rightBoxesParent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"newsletter\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Get Our Newsletter\"}),/*#__PURE__*/_jsx(\"p\",{children:\"And get some great updates\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Email \"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"inputNewsletter\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"buttonNewsletter\",children:\"SUBMIT\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-window\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Help \",props.clientRecent,\" save \",numDisplay,\" on Estate Tax today\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-window-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"create-account-button\",children:\"Create Account\"}),/*#__PURE__*/_jsx(\"button\",{className:\"login-button\",children:\"Login\"})]})]})]})]});}else{suggestionsComp=null;}return suggestionsComp;}export default TileAreaContent;","map":{"version":3,"sources":["C:/Users/Austin/ReactCourse/EstatePal-App-master(July 30th)/EstatePal-App-master/src/components/clientTiles&Sides/TileAreaContent.js"],"names":["TileCard","TileAreaContent","props","numDisplay","totalTax","Number","toFixed","toLocaleString","suggestionsComp","counter","item","map","mapArray","task","description","clientRecent"],"mappings":"AAAA,MAAO,uBAAP,CACA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B;AACA,GAAIC,CAAAA,UAAU,CAAG,CAACD,KAAK,CAACE,QAAN,CAAiB,QAAlB,EAA8B,GAA/C,CACA,GAAID,UAAU,CAAG,CAAjB,CAAoB,CAClBA,UAAU,CAAGE,MAAM,CAACF,UAAU,CAACG,OAAX,EAAD,CAAnB,CACAH,UAAU,YAAOA,UAAU,CAACI,cAAX,EAAP,CAAV,CACD,CAHD,IAGO,CACLJ,UAAU,CAAG,IAAb,CACD,CAED;AACA,GAAIK,CAAAA,eAAe,CAAG,IAAtB,CAEA;AACA,GAAIN,KAAK,CAACO,OAAN,CAAgB,CAApB,CAAuB,CACrBD,eAAe,cACb,aAAK,SAAS,CAAC,MAAf,wBAIE,YAAK,SAAS,CAAC,mBAAf,UACGN,KAAK,CAACQ,IAAN,CAAWC,GAAX,CAAe,SAACC,QAAD,qBACd,KAAC,QAAD,EAAU,IAAI,CAAEA,QAAQ,CAACC,IAAzB,CAA+B,WAAW,CAAED,QAAQ,CAACE,WAArD,EADc,EAAf,CADH,EAJF,cAWE,aAAK,SAAS,CAAC,kBAAf,wBACE,YAAK,SAAS,CAAC,YAAf,uBACE,qCACE,0CADF,cAEE,iDAFF,cAGE,iCAHF,cAIE,cAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAC,iBAA9B,CAAgD,QAAQ,KAAxD,EAJF,cAKE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,kBAAhC,oBALF,GADF,EADF,cAaE,aAAK,SAAS,CAAC,gBAAf,wBACE,8BACQZ,KAAK,CAACa,YADd,UACkCZ,UADlC,0BADF,cAIE,aAAK,SAAS,CAAC,wBAAf,wBACE,eAAQ,SAAS,CAAC,uBAAlB,4BADF,cAEE,eAAQ,SAAS,CAAC,cAAlB,mBAFF,GAJF,GAbF,GAXF,GADF,CAqCD,CAtCD,IAsCO,CACLK,eAAe,CAAG,IAAlB,CACD,CAED,MAAOA,CAAAA,eAAP,CACD,CAED,cAAeP,CAAAA,eAAf","sourcesContent":["import \"./TileAreaContent.css\";\nimport TileCard from \"./TileCard\";\n\nfunction TileAreaContent(props) {\n  // number to display in account window\n  let numDisplay = (props.totalTax - 11700000) * 0.4;\n  if (numDisplay > 0) {\n    numDisplay = Number(numDisplay.toFixed());\n    numDisplay = `$${numDisplay.toLocaleString()}`;\n  } else {\n    numDisplay = null;\n  }\n\n  // declares variable to be used in if statement\n  let suggestionsComp = null;\n\n  // Suggestions section: appears if calculation is done.\n  if (props.counter > 0) {\n    suggestionsComp = (\n      <div className=\"tile\">\n        {/*-\n         below are the client tiles: \n         -*/}\n        <div className=\"aroundClientTiles\">\n          {props.item.map((mapArray) => (\n            <TileCard task={mapArray.task} description={mapArray.description} />\n          ))}\n        </div>\n\n        {/* div for right side suggestions and newsletter */}\n        <div className=\"rightBoxesParent\">\n          <div className=\"newsletter\">\n            <form>\n              <h2>Get Our Newsletter</h2>\n              <p>And get some great updates</p>\n              <label>Email </label>\n              <input type=\"email\" className=\"inputNewsletter\" required></input>\n              <button type=\"submit\" className=\"buttonNewsletter\">\n                SUBMIT\n              </button>\n            </form>\n          </div>\n\n          <div className=\"account-window\">\n            <h2>\n              Help {props.clientRecent} save {numDisplay} on Estate Tax today\n            </h2>\n            <div className=\"account-window-buttons\">\n              <button className=\"create-account-button\">Create Account</button>\n              <button className=\"login-button\">Login</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    suggestionsComp = null;\n  }\n\n  return suggestionsComp;\n}\n\nexport default TileAreaContent;\n"]},"metadata":{},"sourceType":"module"}